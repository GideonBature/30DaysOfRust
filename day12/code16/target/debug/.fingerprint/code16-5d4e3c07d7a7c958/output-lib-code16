{"$message_type":"diagnostic","message":"visibility qualifiers are not permitted here","code":{"code":"E0449","explanation":"A visibility qualifier was used where one is not permitted. Visibility\nqualifiers are not permitted on enum variants, trait items, impl blocks, and\nextern blocks, as they already share the visibility of the parent item.\n\nErroneous code examples:\n\n```compile_fail,E0449\nstruct Bar;\n\ntrait Foo {\n    fn foo();\n}\n\nenum Baz {\n    pub Qux, // error: visibility qualifiers are not permitted here\n}\n\npub impl Bar {} // error: visibility qualifiers are not permitted here\n\npub impl Foo for Bar { // error: visibility qualifiers are not permitted here\n    pub fn foo() {} // error: visibility qualifiers are not permitted here\n}\n```\n\nTo fix this error, simply remove the visibility qualifier. Example:\n\n```\nstruct Bar;\n\ntrait Foo {\n    fn foo();\n}\n\nenum Baz {\n    // Enum variants share the visibility of the enum they are in, so\n    // `pub` is not allowed here\n    Qux,\n}\n\n// Directly implemented methods share the visibility of the type itself,\n// so `pub` is not allowed here\nimpl Bar {}\n\n// Trait methods share the visibility of the trait, so `pub` is not\n// allowed in either case\nimpl Foo for Bar {\n    fn foo() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    pub fn make_noise(&self) {","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait items always share the visibility of their trait","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0449]\u001b[0m\u001b[0m\u001b[1m: visibility qualifiers are not permitted here\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn make_noise(&self) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: trait items always share the visibility of their trait\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"visibility qualifiers are not permitted here","code":{"code":"E0449","explanation":"A visibility qualifier was used where one is not permitted. Visibility\nqualifiers are not permitted on enum variants, trait items, impl blocks, and\nextern blocks, as they already share the visibility of the parent item.\n\nErroneous code examples:\n\n```compile_fail,E0449\nstruct Bar;\n\ntrait Foo {\n    fn foo();\n}\n\nenum Baz {\n    pub Qux, // error: visibility qualifiers are not permitted here\n}\n\npub impl Bar {} // error: visibility qualifiers are not permitted here\n\npub impl Foo for Bar { // error: visibility qualifiers are not permitted here\n    pub fn foo() {} // error: visibility qualifiers are not permitted here\n}\n```\n\nTo fix this error, simply remove the visibility qualifier. Example:\n\n```\nstruct Bar;\n\ntrait Foo {\n    fn foo();\n}\n\nenum Baz {\n    // Enum variants share the visibility of the enum they are in, so\n    // `pub` is not allowed here\n    Qux,\n}\n\n// Directly implemented methods share the visibility of the type itself,\n// so `pub` is not allowed here\nimpl Bar {}\n\n// Trait methods share the visibility of the trait, so `pub` is not\n// allowed in either case\nimpl Foo for Bar {\n    fn foo() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":131,"byte_end":134,"line_start":11,"line_end":11,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub impl MakeNoise for Dog {","highlight_start":1,"highlight_end":4}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait items always share the visibility of their trait","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0449]\u001b[0m\u001b[0m\u001b[1m: visibility qualifiers are not permitted here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub impl MakeNoise for Dog {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: trait items always share the visibility of their trait\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"visibility qualifiers are not permitted here","code":{"code":"E0449","explanation":"A visibility qualifier was used where one is not permitted. Visibility\nqualifiers are not permitted on enum variants, trait items, impl blocks, and\nextern blocks, as they already share the visibility of the parent item.\n\nErroneous code examples:\n\n```compile_fail,E0449\nstruct Bar;\n\ntrait Foo {\n    fn foo();\n}\n\nenum Baz {\n    pub Qux, // error: visibility qualifiers are not permitted here\n}\n\npub impl Bar {} // error: visibility qualifiers are not permitted here\n\npub impl Foo for Bar { // error: visibility qualifiers are not permitted here\n    pub fn foo() {} // error: visibility qualifiers are not permitted here\n}\n```\n\nTo fix this error, simply remove the visibility qualifier. Example:\n\n```\nstruct Bar;\n\ntrait Foo {\n    fn foo();\n}\n\nenum Baz {\n    // Enum variants share the visibility of the enum they are in, so\n    // `pub` is not allowed here\n    Qux,\n}\n\n// Directly implemented methods share the visibility of the type itself,\n// so `pub` is not allowed here\nimpl Bar {}\n\n// Trait methods share the visibility of the trait, so `pub` is not\n// allowed in either case\nimpl Foo for Bar {\n    fn foo() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":164,"byte_end":167,"line_start":12,"line_end":12,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    pub fn make_noise(&self) {","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait items always share the visibility of their trait","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0449]\u001b[0m\u001b[0m\u001b[1m: visibility qualifiers are not permitted here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn make_noise(&self) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: trait items always share the visibility of their trait\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"visibility qualifiers are not permitted here","code":{"code":"E0449","explanation":"A visibility qualifier was used where one is not permitted. Visibility\nqualifiers are not permitted on enum variants, trait items, impl blocks, and\nextern blocks, as they already share the visibility of the parent item.\n\nErroneous code examples:\n\n```compile_fail,E0449\nstruct Bar;\n\ntrait Foo {\n    fn foo();\n}\n\nenum Baz {\n    pub Qux, // error: visibility qualifiers are not permitted here\n}\n\npub impl Bar {} // error: visibility qualifiers are not permitted here\n\npub impl Foo for Bar { // error: visibility qualifiers are not permitted here\n    pub fn foo() {} // error: visibility qualifiers are not permitted here\n}\n```\n\nTo fix this error, simply remove the visibility qualifier. Example:\n\n```\nstruct Bar;\n\ntrait Foo {\n    fn foo();\n}\n\nenum Baz {\n    // Enum variants share the visibility of the enum they are in, so\n    // `pub` is not allowed here\n    Qux,\n}\n\n// Directly implemented methods share the visibility of the type itself,\n// so `pub` is not allowed here\nimpl Bar {}\n\n// Trait methods share the visibility of the trait, so `pub` is not\n// allowed in either case\nimpl Foo for Bar {\n    fn foo() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":226,"byte_end":229,"line_start":17,"line_end":17,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"pub impl MakeNoise for Cat {}","highlight_start":1,"highlight_end":4}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait items always share the visibility of their trait","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0449]\u001b[0m\u001b[0m\u001b[1m: visibility qualifiers are not permitted here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub impl MakeNoise for Cat {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: trait items always share the visibility of their trait\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0449`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0449`.\u001b[0m\n"}
